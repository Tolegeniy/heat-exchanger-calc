
import streamlit as st
import numpy as np
import math

st.set_page_config(page_title="–ü–æ–ª–Ω—ã–π —Ä–∞—Å—á—ë—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞", layout="centered")
st.title("üß† –†–∞—Å—á—ë—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞ –ø–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º –ø–ª–∞—Å—Ç–∏–Ω (–∫–∞–∫ Rational)")

st.markdown("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è, –º–æ—â–Ω–æ—Å—Ç—å ‚Äî –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ –ø–ª–∞—Å—Ç–∏–Ω—ã")

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
power_kw = st.number_input("–¢–µ–ø–ª–æ–≤–∞—è –º–æ—â–Ω–æ—Å—Ç—å (–∫–í—Ç)", value=123.89, min_value=0.1)
t_hot_in = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥—Ä–µ—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã (–≤—Ö–æ–¥), ¬∞C", value=44.0)
t_hot_out = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥—Ä–µ—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã (–≤—ã—Ö–æ–¥), ¬∞C", value=28.7)
t_cold_in = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞–≥—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–æ—Ä–æ–Ω—ã (–≤—Ö–æ–¥), ¬∞C", value=5.0)
t_cold_out = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞–≥—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–æ—Ä–æ–Ω—ã (–≤—ã—Ö–æ–¥), ¬∞C", value=37.0)
dp_hot = st.number_input("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è (–≥—Ä–µ—é—â–∞—è —Å—Ç–æ—Ä–æ–Ω–∞, –º)", value=1.0)
dp_cold = st.number_input("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–≥—Ä–µ–≤–∞–µ–º–∞—è —Å—Ç–æ—Ä–æ–Ω–∞, –º)", value=1.0)
reserve_percent = st.slider("–ó–∞–ø–∞—Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ (%)", 0, 100, 17)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
if t_hot_in <= t_hot_out:
    st.error("‚ùå –û—à–∏–±–∫–∞: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—Ö–æ–¥–µ –≥—Ä–µ—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ, —á–µ–º –Ω–∞ –≤—ã—Ö–æ–¥–µ.")
elif t_cold_out <= t_cold_in:
    st.error("‚ùå –û—à–∏–±–∫–∞: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –Ω–∞–≥—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ, —á–µ–º –Ω–∞ –≤—Ö–æ–¥–µ.")
else:
    # –¢–∞–±–ª–∏—Ü—ã U (–¥–∞–Ω–Ω—ã–µ Rational)
    u_table_hot = {1: 9327, 2: 12240, 3: 14788, 4: 14788, 5: 17616, 6: 19233, 7: 19233, 8: 19233, 9: 21292, 10: 21292}
    u_table_cold = {1: 5936, 2: 7503, 3: 9415, 4: 9415, 5: 11144, 6: 12132, 7: 12132, 8: 12132, 9: 13376, 10: 13376}

    def interpolate_u(dp, u_table):
        keys = sorted(u_table.keys())
        for i in range(len(keys)-1):
            if keys[i] <= dp <= keys[i+1]:
                x0, x1 = keys[i], keys[i+1]
                y0, y1 = u_table[x0], u_table[x1]
                return y0 + (dp - x0) * (y1 - y0) / (x1 - x0)
        return u_table[keys[0]] if dp <= keys[0] else u_table[keys[-1]]

    # –†–∞—Å—á—ë—Ç LMTD
    delta_t1 = t_hot_in - t_cold_out
    delta_t2 = t_hot_out - t_cold_in
    if delta_t1 > 0 and delta_t2 > 0 and delta_t1 != delta_t2:
        lmtd = (delta_t1 - delta_t2) / np.log(delta_t1 / delta_t2)
    else:
        lmtd = (delta_t1 + delta_t2) / 2 if (delta_t1 + delta_t2) > 0 else 0

    if lmtd == 0 or np.isnan(lmtd):
        st.error("‚ùå –û—à–∏–±–∫–∞: LMTD –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä.")
    else:
        # –†–∞—Å—á—ë—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π)
        q = power_kw * 1000
        u_hot = interpolate_u(dp_hot, u_table_hot)
        u_cold = interpolate_u(dp_cold, u_table_cold)
        u_avg = (u_hot + u_cold) / 2
        area_required = q / (u_avg * lmtd)
        area_with_reserve = area_required * (1 + reserve_percent / 100)

        # –ú–æ–¥–µ–ª–∏ –ø–ª–∞—Å—Ç–∏–Ω
        plate_models = {
            "FP04": {"area": 0.04, "volume": 0.167},
            "FP05": {"area": 0.04, "volume": 0.167},
            "FP10": {"area": 0.10, "volume": 0.167},
            "FP20": {"area": 0.20, "volume": 0.167},
            "FP31": {"area": 0.31, "volume": 0.167},
        }

        st.subheader("üìä –†–∞—Å—á—ë—Ç—ã –ø–æ –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ –ø–ª–∞—Å—Ç–∏–Ω—ã:")
        for model, props in plate_models.items():
            area = props["area"]
            volume_per_plate = props["volume"]
            plates = math.ceil(area_with_reserve / area) + 1
            actual_area = (plates - 1) * area
            volume = round(plates * volume_per_plate, 2)

            with st.expander(f"üîπ {model}: {plates} —à—Ç (–ø–ª–æ—â–∞–¥—å –æ–¥–Ω–æ–π = {area} –º¬≤)"):
                st.markdown(f"""
                **U –≥—Ä–µ—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã:** {int(u_hot)} –í—Ç/–º¬≤¬∑–ö  
                **U –Ω–∞–≥—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–æ—Ä–æ–Ω—ã:** {int(u_cold)} –í—Ç/–º¬≤¬∑–ö  
                **–°—Ä–µ–¥–Ω–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç U:** {int(u_avg)} –í—Ç/–º¬≤¬∑–ö  
                **LMTD:** {round(lmtd, 2)} ¬∞C  
                **–†–∞—Å—á—ë—Ç–Ω–∞—è –ø–ª–æ—â–∞–¥—å –±–µ–∑ –∑–∞–ø–∞—Å–∞:** {round(area_required, 2)} –º¬≤  
                **–ü–ª–æ—â–∞–¥—å —Å —É—á—ë—Ç–æ–º –∑–∞–ø–∞—Å–∞:** {round(area_with_reserve, 2)} –º¬≤  
                **–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å:** {round(actual_area, 2)} –º¬≤  
                **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–∞—Å—Ç–∏–Ω:** {plates}  
                **–û–±—ä—ë–º –≥—Ä–µ—é—â–µ–π —Å—Ç–æ—Ä–æ–Ω—ã:** {volume} –ª  
                **–û–±—ä—ë–º –Ω–∞–≥—Ä–µ–≤–∞–µ–º–æ–π —Å—Ç–æ—Ä–æ–Ω—ã:** {volume} –ª  
                **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –≥—Ä–µ—é—â–∞—è:** {t_hot_in} / {t_hot_out} ¬∞C  
                **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –Ω–∞–≥—Ä–µ–≤–∞–µ–º–∞—è:** {t_cold_in} / {t_cold_out} ¬∞C  
                **–ú–∞–∫—Å. –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è –≥—Ä–µ—é—â–∞—è:** {dp_hot} –º  
                **–ú–∞–∫—Å. –ø–æ—Ç–µ—Ä–∏ –¥–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≥—Ä–µ–≤–∞–µ–º–∞—è:** {dp_cold} –º  
                """)
