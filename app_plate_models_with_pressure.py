
import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="–†–∞—Å—á—ë—Ç —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª—è–º –ø–ª–∞—Å—Ç–∏–Ω", layout="centered")
st.title("üìä –†–∞—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–ª–∞—Å—Ç–∏–Ω –∏ –ø–ª–æ—â–∞–¥–∏ –ø–æ –º–æ–¥–µ–ª—è–º —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞")

st.markdown("–ú–∞—Ç–µ—Ä–∏–∞–ª –ø–ª–∞—Å—Ç–∏–Ω: **AISI 316 (0.5 –º–º)**")

# –í–≤–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
st.subheader("üîß –í–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
power_kw = st.number_input("–¢–µ–ø–ª–æ–≤–∞—è –º–æ—â–Ω–æ—Å—Ç—å (–∫–í—Ç)", min_value=0.1, value=100.0)
reserve_percent = st.slider("–ó–∞–ø–∞—Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ (%)", min_value=0, max_value=100, value=10)

t_hot_in = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—Ö–æ–¥–µ (–≥—Ä–µ—é—â–∞—è), ¬∞C", value=130.0)
t_hot_out = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ (–≥—Ä–µ—é—â–∞—è), ¬∞C", value=70.0)
t_cold_in = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—Ö–æ–¥–µ (–Ω–∞–≥—Ä–µ–≤–∞–µ–º–∞—è), ¬∞C", value=60.0)
t_cold_out = st.number_input("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ (–Ω–∞–≥—Ä–µ–≤–∞–µ–º–∞—è), ¬∞C", value=90.0)

# –†–∞—Å—á—ë—Ç –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —Å—Ä–µ–¥–Ω–µ–π —Ä–∞–∑–Ω–æ—Å—Ç–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä (LMTD)
delta_t1 = t_hot_in - t_cold_out
delta_t2 = t_hot_out - t_cold_in
if delta_t1 != delta_t2 and delta_t1 > 0 and delta_t2 > 0:
    lmtd = (delta_t1 - delta_t2) / np.log(delta_t1 / delta_t2)
else:
    lmtd = delta_t1  # –µ—Å–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã

# –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏
k = 3000  # –í—Ç/–º¬≤¬∑–ö

# –ú–æ—â–Ω–æ—Å—Ç—å –≤ –í—Ç
q = power_kw * 1000

# –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è –ø–ª–æ—â–∞–¥—å —Å –∑–∞–ø–∞—Å–æ–º
area_required = q / (k * lmtd)
area_with_reserve = area_required * (1 + reserve_percent / 100)

# –¢–∞–±–ª–∏—Ü–∞ –º–æ–¥–µ–ª–µ–π –∏ –ø–ª–æ—â–∞–¥–µ–π
models = {
    "FP04": {"area": 0.04, "pressure": 16},
    "FP05": {"area": 0.04, "pressure": 25},
    "FP10": {"area": 0.10, "pressure": 25},
    "FP20": {"area": 0.20, "pressure": 25},
    "FP31": {"area": 0.31, "pressure": 16}
}

# –†–∞—Å—á—ë—Ç –ø–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º
results = []
for model, props in models.items():
    plate_area = props["area"]
    max_pressure = props["pressure"]
    plates_needed = np.ceil(area_with_reserve / plate_area) + 1  # +1 –Ω–∞ –∫—Ä–∞–π–Ω–∏–µ
    actual_area = (plates_needed - 1) * plate_area
    results.append({
        "–ú–æ–¥–µ–ª—å": model,
        "–ö–æ–ª-–≤–æ –ø–ª–∞—Å—Ç–∏–Ω": int(plates_needed),
        "–ü–ª–æ—â–∞–¥—å —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–∞ (–º¬≤)": round(actual_area, 2),
        "–ú–∞–∫—Å. –¥–∞–≤–ª–µ–Ω–∏–µ (–±–∞—Ä)": max_pressure
    })

df = pd.DataFrame(results)

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
st.subheader("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á—ë—Ç–∞ –ø–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º")
st.dataframe(df)
